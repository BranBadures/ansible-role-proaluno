# https://wiki.debian.org/SystemPrinting
- name: Install a printers list of packages
  apt:
    pkg:
    - cups
    - task-print-server
    - printer-driver-all
    - foomatic-db-engine
    - hp-ppd
    - openprinting-ppds

- name: Create a directory /usr/lib/cups/filter
  file:
    path: /usr/lib/cups/filter
    state: directory
    mode: '0755'

- name: Copy gstopdf17
  copy:
    src: files/gstopdf17
    dest: /usr/lib/cups/filter/gstopdf17
    mode: '0755'

- name: Copy usp.types
  copy:
    src: files/usp.types
    dest: /etc/cups/usp.types
    mode: '0644'

- name: Copy lpoptions
  copy:
    src: files/lpoptions
    dest: /etc/cups/lpoptions
    mode: '0644'

- name: Copy ppds
  copy:
    src: "files/ppds/{{item}}"
    dest: "/usr/share/cups/model/{{item}}"
    mode: '0755'
  loop:
    - K7600_direto_simplex.ppd
    - K7600_direto_duplex.ppd
    - K7600_direto_duplex_borda_menor.ppd
    - K7600_processado_simplex.ppd
    - K7600_processado_duplex.ppd
    - K7600_processado_duplex_borda_menor.ppd

#### remover todas impressoras antes de instalar a nova
# for i in $(lpstat -p | awk '{print $2}'); do lpadmin -x $i; done
- name: getting installed printers
  shell: lpstat -p | awk '{print $2}'
  register: installed_printers

- name: removing installed printers
  shell: lpadmin -x {{ item }}
  with_items: "{{ installed_printers.stdout_lines }}"
  when: proaluno_remove_printers
  ignore_errors: True

#### Exemplo de instalação de uma impressora
# lpadmin -p nome_impressora 
#    -v ipp://cups.fflch.usp.br:631/printers/let_samsung_pb_k7500lx_proaluno 
#    -m K7600.ppd -o printer-error-policy=abort-job 
#    -o sides=two-sided-long-edge -E
- name: Install printers
  shell: >
    /usr/sbin/lpadmin -p {{ item.name }}
    -v {{ item.device }}
    -m {{ item.model }}
    -o printer-error-policy=abort-job
    -o printer-is-shared=false
    -o PageSize=A4
    -o Media=A4
    - -E
# lpadmin -E option forces encryption when connecting to the server
  args:
    chdir: /usr/share/cups/model
  loop: "{{ cups_printers }}"

- name: Disable services
  systemd:
    name: "{{item}}"
    state: stopped
    enabled: no
    masked: yes
  loop:
    - cups-browsed
#    - avahi-daemon

- name: Remove avahi-daemon
  apt:
    name: "avahi-daemon"
    state: absent
    purge: yes
