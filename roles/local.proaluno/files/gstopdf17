#!/bin/sh

# gstopdf17 - Ghostscript-based PDF filter for CUPS
#
# (C) 2019 Nelson Lago <lago@ime.usp.br>
# Based on gstopdf from OpenPrinting cups-filters package,
# (C) 2012 Till Kamppeter <till.kamppeter@gmail.com>
#
# Released under GPL 2 or later
#
# gstopdf uses gstoraster which, in turn, uses GhostScript with
# the -dCompatibilityLevel=1.3 option. In this script, we directly
# call GhostScript with the -dCompatibilityLevel=1.7 option.

echo "DEBUG: gstopdf17 argv[$#] = $@" >&2
echo "DEBUG: PPD: $PPD" >&2

if [ $# -lt 5 -o $# -gt 6 ]; then
    echo "ERROR: gstopdf17 job-id user title copies options [file]" >&2
    exit 1
fi

# Read from given file.
if [ -n "$6" ]; then
    exec <"$6"
fi

# For raster or bitmap output, these additional options may
# be of interest:
# -dBGPrint=true -dNumRenderingThreads=4 -dMaxBitmap=10M
# -sBandListStorage=memory -dBandHeight=900
# They are documented here:
# https://www.ghostscript.com/doc/9.22/Language.htm#Banding_parameters
#
# -K524288 limits memory usage to 512MB. I do not know,
# however, how GhostScript handles this: if this is
# insufficient, does gs crash, enter an endless loop or
# output garbage?
#
# -c "33554432 setvmthreshold" may improve performance in
# some cases with pdfwrite.
#
# -dInterpolateControl=0 is the new syntax for -dNOINTERPOLATE

exec /usr/bin/gs \
    -q -dQUIET -dNOPAUSE -dBATCH -dPARANOIDSAFER -dNOPLATFONTS \
    -K524288 -dInterpolateControl=0 -dNOMEDIAATTRS \
    -sDEVICE=pdfwrite -dCompatibilityLevel=1.7 -dPDFSETTINGS=/printer \
    -dAutoRotatePages=/None -dAutoFilterColorImages=false \
    -dColorImageFilter=/FlateEncode -dShowAcroForm \
    -dColorConversionStrategy=/LeaveColorUnchanged \
    -sstdout=%stderr -sOutputFile=%stdout -c "33554432 setvmthreshold" -f - 2>/dev/null
